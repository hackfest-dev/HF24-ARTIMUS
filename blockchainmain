<!-- blockchainauth.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Package</title>
</head>
<body>
    <h1>Add Package</h1>
    <form id="addPackageForm">
        <label for="packageid">Package ID:</label><br>
        <input type="number" id="packageid" name="packageid" required><br>
        <label for="initlocation">Initial Location:</label><br>
        <input type="text" id="initlocation" name="initlocation" required><br>
        <label for="action">Action:</label><br>
        <input type="text" id="action" name="action" required><br>
        <label for="undertaken">Undertaken:</label><br>
        <input type="text" id="undertaken" name="undertaken" required><br>
        <button type="submit">Add Package</button>
    </form>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.6.0/web3.min.js"></script>
    <script>
        const web3 = new Web3(Web3.givenProvider || "http://localhost:8545");

        const contractAddress = '0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B';
        const contractABI = [
	{
		"inputs": [
			{
				"internalType": "int256",
				"name": "packageid",
				"type": "int256"
			},
			{
				"internalType": "string",
				"name": "initlocation",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "action",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "undertaken",
				"type": "string"
			}
		],
		"name": "addpackage",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "int256",
				"name": "packageid",
				"type": "int256"
			}
		],
		"name": "getpackage",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];
        const contract = new web3.eth.Contract(contractABI, contractAddress);

        document.getElementById("addPackageForm").addEventListener("submit", async function(event) {
            event.preventDefault();
            const formData = new FormData(event.target);
            const packageid = formData.get('packageid');
            const initlocation = formData.get('initlocation');
            const action = formData.get('action');
            const undertaken = formData.get('undertaken');

            try {
                const accounts = await web3.eth.requestAccounts();
                const result = await contract.methods.addpackage(packageid, initlocation, action, undertaken)
                    .send({ from: accounts[0] });
                alert("Package added successfully!");
            } catch (error) {
                console.error(error);
                alert("Failed to add package. Please check the console for error details.");
            }
        });
    </script>
</body>
</html>
